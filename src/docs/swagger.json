{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "api-bus-schedules",
    "description": "Simple api to manage and control itineraries and schedules of bus service."
  },
  "servers": [
    {
      "url": "http://api.horariodeonibusml.com.br/"
    },
    {
      "url": "https://api.horariodeonibusml.com.br/"
    }
  ],
  "tags": [
    {
      "name": "Authentication",
      "description": "Endpoints"
    },
    {
      "name": "Itineraries",
      "description": "Endpoints"
    },
    {
      "name": "Schedules",
      "description": "Endpoints"
    },
    {
      "name": "Ways",
      "description": "Endpoints"
    },
    {
      "name": "Maps",
      "description": "Endpoints"
    },
    {
      "name": "Health",
      "description": "Endpoints"
    }
  ],
  "paths": {
    "/api-bus-schedules/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "description": "Recebe um nome de usuário e senha via autenticação básica e retorna um token JWT",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso ao fazer login",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Credenciais inválidas",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Credenciais inválidas"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Credenciais inválidas"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Credenciais inválidas"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Erro interno do servidor"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Erro interno do servidor"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Erro interno do servidor"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/health": {
      "get": {
        "tags": [
          "Health"
        ],
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success to connect to database",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "UP"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "UP"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "UP"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Failed to connect to database",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "DOWN"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "DOWN"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "DOWN"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api-bus-schedules/api/v1/itineraries/list": {
      "get": {
        "tags": [
          "Itineraries"
        ],
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Register data, and sent email",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "itineraries": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "example": 677
                          },
                          "name": {
                            "type": "string",
                            "example": "ml_sjc"
                          },
                          "alias": {
                            "type": "string",
                            "example": "Monteiro Lobato x São José dos Campos"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Register data, and sent email",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failed"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api-bus-schedules/api/v1/itineraries/create": {
      "post": {
        "tags": [
          "Itineraries"
        ],
        "description": "",
        "parameters": [
          {
            "name": "send",
            "in": "body",
            "description": "Register and send information.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/itinerariesCreate"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Register data, and sent email",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "object",
                      "example": "Success!"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, schema or parameters is invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Missing": {
                      "type": "object",
                      "example": "Parameters"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid token acess",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "example": "Invalid token"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Register data, and sent email",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failed"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api-bus-schedules/api/v1/itineraries/delete": {
      "delete": {
        "tags": [
          "Itineraries"
        ],
        "description": "",
        "parameters": [
          {
            "name": "send",
            "in": "body",
            "description": "Delete register.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/itinerariesDelete"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Register in database was deleted success!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success!"
                    },
                    "message": {
                      "type": "string",
                      "example": "Register {'id': 7'name': sjc_sp'alias': São José dos Campos X São Paulo} deleted successfully."
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success!"
                    },
                    "message": {
                      "type": "string",
                      "example": "Register {'id': 7'name': sjc_sp'alias': São José dos Campos X São Paulo} deleted successfully."
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "Success!"
                },
                "message": {
                  "type": "string",
                  "example": "Register {'id': 7'name': sjc_sp'alias': São José dos Campos X São Paulo} deleted successfully."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad request, schema or parameters is invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Missing": {
                      "type": "object",
                      "example": "Parameters"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid token acess",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "example": "Invalid token"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Register data, and sent email",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failed"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api-bus-schedules/api/v1/itineraries/update": {
      "patch": {
        "tags": [
          "Itineraries"
        ],
        "description": "",
        "parameters": [
          {
            "name": "send",
            "in": "body",
            "description": "Update register.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/itinerariesEdit"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated register in database",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Operation": {
                      "type": "string",
                      "example": "Sucess!"
                    },
                    "Action": {
                      "type": "string",
                      "example": "Update"
                    },
                    "Register": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "sjc_sp"
                        },
                        "alias": {
                          "type": "string",
                          "example": "São José dos Campos X São Paulo"
                        }
                      }
                    },
                    "New Register": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "sjc_sp"
                        },
                        "alias": {
                          "type": "string",
                          "example": "São José dos Campos X São Paulo Capital"
                        }
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Operation": {
                      "type": "string",
                      "example": "Sucess!"
                    },
                    "Action": {
                      "type": "string",
                      "example": "Update"
                    },
                    "Register": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "sjc_sp"
                        },
                        "alias": {
                          "type": "string",
                          "example": "São José dos Campos X São Paulo"
                        }
                      }
                    },
                    "New Register": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "sjc_sp"
                        },
                        "alias": {
                          "type": "string",
                          "example": "São José dos Campos X São Paulo Capital"
                        }
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "Operation": {
                  "type": "string",
                  "example": "Sucess!"
                },
                "Action": {
                  "type": "string",
                  "example": "Update"
                },
                "Register": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "sjc_sp"
                    },
                    "alias": {
                      "type": "string",
                      "example": "São José dos Campos X São Paulo"
                    }
                  }
                },
                "New Register": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "sjc_sp"
                    },
                    "alias": {
                      "type": "string",
                      "example": "São José dos Campos X São Paulo Capital"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad request, schema or parameters is invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Missing": {
                      "type": "object",
                      "example": "Parameters"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid token acess",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "example": "Invalid token"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Register data, and sent email",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failed"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api-bus-schedules/api/v1/schedules/list": {
      "get": {
        "tags": [
          "Schedules"
        ],
        "description": "",
        "parameters": [
          {
            "name": "itineraries_name",
            "in": "query",
            "description": "Filter by itinerarie.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "weekly",
            "in": "query",
            "description": "Filter by weekly schedules.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "saturday",
            "in": "query",
            "description": "Filter by saturday schedules.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sunday",
            "in": "query",
            "description": "Filter by sunday schedules.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "come_from_sfx",
            "in": "query",
            "description": "Filter by come_from_sfx schedules.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "to_sfx",
            "in": "query",
            "description": "Filter by to_sfx schedules.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Listed all register",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "horarios": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "number",
                            "example": 2
                          },
                          "saida": {
                            "type": "string",
                            "example": "06:40:00"
                          },
                          "chegada": {
                            "type": "string",
                            "example": "07:40:00"
                          },
                          "semanal": {
                            "type": "boolean",
                            "example": true
                          },
                          "sabado": {
                            "type": "boolean",
                            "example": false
                          },
                          "domingo": {
                            "type": "boolean",
                            "example": false
                          },
                          "itinerario": {
                            "type": "string",
                            "example": "ml_sjc"
                          }
                        }
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "horarios": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "number",
                            "example": 2
                          },
                          "saida": {
                            "type": "string",
                            "example": "06:40:00"
                          },
                          "chegada": {
                            "type": "string",
                            "example": "07:40:00"
                          },
                          "semanal": {
                            "type": "boolean",
                            "example": true
                          },
                          "sabado": {
                            "type": "boolean",
                            "example": false
                          },
                          "domingo": {
                            "type": "boolean",
                            "example": false
                          },
                          "itinerario": {
                            "type": "string",
                            "example": "ml_sjc"
                          }
                        }
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "horarios": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "number",
                        "example": 2
                      },
                      "saida": {
                        "type": "string",
                        "example": "06:40:00"
                      },
                      "chegada": {
                        "type": "string",
                        "example": "07:40:00"
                      },
                      "semanal": {
                        "type": "boolean",
                        "example": true
                      },
                      "sabado": {
                        "type": "boolean",
                        "example": false
                      },
                      "domingo": {
                        "type": "boolean",
                        "example": false
                      },
                      "itinerario": {
                        "type": "string",
                        "example": "ml_sjc"
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad request, schema or parameters is invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Missing": {
                      "type": "object",
                      "example": "Parameters"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Register data, and sent email",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failed"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api-bus-schedules/api/v1/schedules/create": {
      "post": {
        "tags": [
          "Schedules"
        ],
        "description": "",
        "parameters": [
          {
            "name": "send",
            "in": "body",
            "description": "Register new schedule",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/schedulesCreate"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Data was registered in database",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Sucess"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, schema or parameters is invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Missing": {
                      "type": "object",
                      "example": "Parameters"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Register data, and sent email",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failed"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api-bus-schedules/api/v1/schedules/update": {
      "patch": {
        "tags": [
          "Schedules"
        ],
        "description": "",
        "parameters": [
          {
            "name": "send",
            "in": "body",
            "description": "Edit an existent schedule",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/schedulesEdit"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Register was updated in database",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Status": {
                      "type": "string",
                      "example": "Register 12 updated sucefully"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Status": {
                      "type": "string",
                      "example": "Register 12 updated sucefully"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "Status": {
                  "type": "string",
                  "example": "Register 12 updated sucefully"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad request, schema or parameters is invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Missing": {
                      "type": "object",
                      "example": "Parameters"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Failed to connect to database",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Status": {
                      "type": "string",
                      "example": "Failed"
                    },
                    "Error to update register": {
                      "type": "number",
                      "example": 12
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Status": {
                      "type": "string",
                      "example": "Failed"
                    },
                    "Error to update register": {
                      "type": "number",
                      "example": 12
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "Status": {
                  "type": "string",
                  "example": "Failed"
                },
                "Error to update register": {
                  "type": "number",
                  "example": 12
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api-bus-schedules/api/v1/schedules/delete": {
      "delete": {
        "tags": [
          "Schedules"
        ],
        "description": "",
        "parameters": [
          {
            "name": "send",
            "in": "body",
            "description": "Delete an existent schedule",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/schedulesDelete"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Register was delete in database",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Status": {
                      "type": "string",
                      "example": "Register 12 Deleted Sucefully"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Status": {
                      "type": "string",
                      "example": "Register 12 Deleted Sucefully"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "Status": {
                  "type": "string",
                  "example": "Register 12 Deleted Sucefully"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad request, schema or parameters is invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Missing": {
                      "type": "object",
                      "example": "Parameters"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Register data, and sent email",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failed"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api-bus-schedules/api/v1/ways/list": {
      "get": {
        "tags": [
          "Ways"
        ],
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api-bus-schedules/api/v1/ways/list/filter": {
      "get": {
        "tags": [
          "Ways"
        ],
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api-bus-schedules/api/v1/ways/create": {
      "post": {
        "tags": [
          "Ways"
        ],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "route_alias": {
                    "example": "any"
                  },
                  "route_name": {
                    "example": "any"
                  },
                  "bus_stops": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api-bus-schedules/api/v1/ways/update": {
      "patch": {
        "tags": [
          "Ways"
        ],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "route_alias": {
                    "example": "any"
                  },
                  "route_name": {
                    "example": "any"
                  },
                  "bus_stops": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api-bus-schedules/api/v1/ways/delete": {
      "delete": {
        "tags": [
          "Ways"
        ],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "route_alias": {
                    "example": "any"
                  },
                  "route_name": {
                    "example": "any"
                  },
                  "bus_stops": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api-bus-schedules/api/v1/maps/list": {
      "get": {
        "tags": [
          "Maps"
        ],
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api-bus-schedules/api/v1/maps/create": {
      "post": {
        "tags": [
          "Maps"
        ],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "maps_name": {
                    "example": "any"
                  },
                  "link": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api-bus-schedules/api/v1/maps/update": {
      "patch": {
        "tags": [
          "Maps"
        ],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "maps_name": {
                    "example": "any"
                  },
                  "link": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api-bus-schedules/api/v1/maps/delete": {
      "delete": {
        "tags": [
          "Maps"
        ],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "maps_name": {
                    "example": "any"
                  },
                  "link": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "basicAuth": {
        "type": "http",
        "scheme": "basic"
      },
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "itinerariesCreate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "sjc_sp"
          },
          "alias": {
            "type": "string",
            "example": "São José dos Campos X São Paulo"
          }
        },
        "xml": {
          "name": "itinerariesCreate"
        }
      },
      "itinerariesDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 7
          },
          "name": {
            "type": "string",
            "example": "sjc_sp"
          },
          "alias": {
            "type": "string",
            "example": "São José dos Campos X São Paulo"
          }
        },
        "xml": {
          "name": "itinerariesDelete"
        }
      },
      "itinerariesEdit": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 66
          },
          "name": {
            "type": "string",
            "example": "sjc_sp"
          },
          "alias": {
            "type": "string",
            "example": "São José dos Campos X São Paulo"
          },
          "update": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "sjc_sp"
              },
              "alias": {
                "type": "string",
                "example": "São José dos Campos X São Paulo(capital)"
              }
            }
          }
        },
        "xml": {
          "name": "itinerariesEdit"
        }
      },
      "schedulesCreate": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "example": "05:30:00"
          },
          "end": {
            "type": "string",
            "example": "06:30:00"
          },
          "weekly": {
            "type": "boolean",
            "example": true
          },
          "saturday": {
            "type": "boolean",
            "example": false
          },
          "sunday": {
            "type": "boolean",
            "example": false
          },
          "come_from_sfx": {
            "type": "boolean",
            "example": false
          },
          "to_sfx": {
            "type": "boolean",
            "example": false
          },
          "itineraries_name": {
            "type": "string",
            "example": "ml_sjc"
          },
          "itineraries_alias": {
            "type": "string",
            "example": "Monteiro Lobato x São José dos Campos"
          }
        },
        "xml": {
          "name": "schedulesCreate"
        }
      },
      "schedulesDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 45
          },
          "saida": {
            "type": "string",
            "example": "06:40:00"
          },
          "chegada": {
            "type": "string",
            "example": "07:40:00"
          },
          "semanal": {
            "type": "boolean",
            "example": true
          },
          "sabado": {
            "type": "boolean",
            "example": false
          },
          "domingo": {
            "type": "boolean",
            "example": false
          },
          "itinerario": {
            "type": "string",
            "example": "ml_sjc"
          }
        },
        "xml": {
          "name": "schedulesDelete"
        }
      },
      "schedulesEdit": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 45
          },
          "saida": {
            "type": "string",
            "example": "06:40:00"
          },
          "chegada": {
            "type": "string",
            "example": "07:40:00"
          },
          "semanal": {
            "type": "boolean",
            "example": true
          },
          "sabado": {
            "type": "boolean",
            "example": false
          },
          "domingo": {
            "type": "boolean",
            "example": false
          },
          "itinerario": {
            "type": "string",
            "example": "ml_sjc"
          }
        },
        "xml": {
          "name": "schedulesEdit"
        }
      }
    }
  }
}